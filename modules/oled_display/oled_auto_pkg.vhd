--! @file        oled_auto_pkg.vhd
--  DesignUnit   oled_auto
--! @author      M. Kreider <m.kreider@gsi.de>
--! @date        13/02/2018
--! @version     0.2.0
--! @copyright   2018 GSI Helmholtz Centre for Heavy Ion Research GmbH
--!

--! @brief AUTOGENERATED WISHBONE-SLAVE PACKAGE FOR oled.vhd
--!
--------------------------------------------------------------------------------
--! This library is free software; you can redistribute it and/or
--! modify it under the terms of the GNU Lesser General Public
--! License as published by the Free Software Foundation; either
--! version 3 of the License, or (at your option) any later version.
--!
--! This library is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--! Lesser General Public License for more details.
--!
--! You should have received a copy of the GNU Lesser General Public
--! License along with this library. If not, see <http://www.gnu.org/licenses/>.
--------------------------------------------------------------------------------

-- ***********************************************************
-- ** WARNING - THIS IS AUTO-GENERATED CODE! DO NOT MODIFY! **
-- ***********************************************************
--
-- If you want to change the interface,
-- modify oled.xml and re-run 'python wbgenplus.py oled.xml' !

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wishbone_pkg.all;
use work.wbgenplus_pkg.all;
use work.genram_pkg.all;
package oled_auto_pkg is

  constant c_reset_OWR    : natural := 16#0#;   -- wo,  1 b, Resets the OLED display
  constant c_col_offs_RW  : natural := 16#4#;   -- rw,  8 b, first visible pixel column. 0x23 for old, 0x30 for new controllers. default is 0x30
  constant c_uart_OWR     : natural := 16#8#;   -- wo,  8 b, UART input FIFO. Ascii b7..0
  constant c_char_OWR     : natural := 16#c#;   -- wo, 20 b, Char input FIFO. Row b14..12, Col b11..8, Ascii b7..0
  constant c_raw_OWR      : natural := 16#10#;  -- wo, 20 b, Raw  input FIFO. Disp RAM Adr b18..8, Pixel (Col) b7..0

  --| Component ------------------------- oled_auto -------------------------------------------|
  component oled_auto is
  Port(
    clk_sys_i   : std_logic;                            -- Clock input for sys domain
    rst_sys_n_i : std_logic;                            -- Reset input (active low) for sys domain
    error_i     : in  std_logic_vector(1-1 downto 0);   -- Error control
    stall_i     : in  std_logic_vector(1-1 downto 0);   -- flow control
    char_o      : out std_logic_vector(20-1 downto 0);  -- Char input FIFO. Row b14..12, Col b11..8, Ascii b7..0
    char_WR_o   : out std_logic_vector(1-1 downto 0);   -- Write enable flag - char
    col_offs_o  : out std_logic_vector(8-1 downto 0);   -- first visible pixel column. 0x23 for old, 0x30 for new controllers. default is 0x30
    raw_o       : out std_logic_vector(20-1 downto 0);  -- Raw  input FIFO. Disp RAM Adr b18..8, Pixel (Col) b7..0
    raw_WR_o    : out std_logic_vector(1-1 downto 0);   -- Write enable flag - raw
    reset_o     : out std_logic_vector(1-1 downto 0);   -- Resets the OLED display
    uart_o      : out std_logic_vector(8-1 downto 0);   -- UART input FIFO. Ascii b7..0
    uart_WR_o   : out std_logic_vector(1-1 downto 0);   -- Write enable flag - uart
    
    slave_i     : in  t_wishbone_slave_in;
    slave_o     : out t_wishbone_slave_out

    
  );
  end component;

  constant c_oled_slave_sdb : t_sdb_device := (
  abi_class     => x"0000", -- undocumented device
  abi_ver_major => x"01",
  abi_ver_minor => x"00",
  wbd_endian    => c_sdb_endian_big,
  wbd_width     => x"7", -- 8/16/32-bit port granularity
  sdb_component => (
  addr_first    => x"0000000000000000",
  addr_last     => x"000000000000001f",
  product => (
  vendor_id     => x"0000000000000651",
  device_id     => x"93a6f3c4",
  version       => x"00000020",
  date          => x"20180213",
  name          => "OLED_Display       ")));

end oled_auto_pkg;
package body oled_auto_pkg is
end oled_auto_pkg;
