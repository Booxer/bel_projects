// asmi10.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module asmi10 (
		input  wire [31:0] addr,          //          addr.addr
		output wire        busy,          //          busy.busy
		input  wire        clkin,         //         clkin.clk
		output wire        data_valid,    //    data_valid.data_valid
		input  wire [7:0]  datain,        //        datain.datain
		output wire [7:0]  dataout,       //       dataout.dataout
		input  wire        en4b_addr,     //     en4b_addr.en4b_addr
		input  wire        fast_read,     //     fast_read.fast_read
		output wire        illegal_erase, // illegal_erase.illegal_erase
		output wire        illegal_write, // illegal_write.illegal_write
		input  wire        rden,          //          rden.rden
		output wire [7:0]  rdid_out,      //      rdid_out.rdid_out
		output wire [31:0] read_address,  //  read_address.read_address
		input  wire        read_dummyclk, // read_dummyclk.read_dummyclk
		input  wire        read_rdid,     //     read_rdid.read_rdid
		input  wire        read_status,   //   read_status.read_status
		input  wire        reset,         //         reset.reset
		input  wire [2:0]  sce,           //           sce.sce
		input  wire        sector_erase,  //  sector_erase.sector_erase
		input  wire        shift_bytes,   //   shift_bytes.shift_bytes
		output wire [7:0]  status_out,    //    status_out.status_out
		input  wire        wren,          //          wren.wren
		input  wire        write          //         write.write
	);

	asmi10_altera_asmi_parallel_181_gdoqleq asmi_parallel_0 (
		.clkin         (clkin),         //         clkin.clk
		.fast_read     (fast_read),     //     fast_read.fast_read
		.rden          (rden),          //          rden.rden
		.addr          (addr),          //          addr.addr
		.read_status   (read_status),   //   read_status.read_status
		.write         (write),         //         write.write
		.datain        (datain),        //        datain.datain
		.shift_bytes   (shift_bytes),   //   shift_bytes.shift_bytes
		.sector_erase  (sector_erase),  //  sector_erase.sector_erase
		.wren          (wren),          //          wren.wren
		.read_rdid     (read_rdid),     //     read_rdid.read_rdid
		.en4b_addr     (en4b_addr),     //     en4b_addr.en4b_addr
		.reset         (reset),         //         reset.reset
		.read_dummyclk (read_dummyclk), // read_dummyclk.read_dummyclk
		.sce           (sce),           //           sce.sce
		.dataout       (dataout),       //       dataout.dataout
		.busy          (busy),          //          busy.busy
		.data_valid    (data_valid),    //    data_valid.data_valid
		.status_out    (status_out),    //    status_out.status_out
		.illegal_write (illegal_write), // illegal_write.illegal_write
		.illegal_erase (illegal_erase), // illegal_erase.illegal_erase
		.read_address  (read_address),  //  read_address.read_address
		.rdid_out      (rdid_out)       //      rdid_out.rdid_out
	);

endmodule
